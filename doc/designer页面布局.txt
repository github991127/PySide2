⚫●○■□★█
⚫网址
●Python Qt 简介
http://www.byhy.net/tut/py/gui/qt_01/
https://www.bilibili.com/video/BV1cJ411R7bP?p=13



⚫
●QPushButton按钮
clicked.connect(fun)响应单击

●QLineEdit单行文本
1. setText(text): 设置文本框的内容为给定的文本。
2. text(): 返回文本框中的文本内容。
3. setReadOnly(bool): 设置文本框的只读属性。如果参数为True，文本框将只能读取，不能编辑。
4. setPlaceholderText(text): 设置文本框的占位文本。当文本框没有输入内容时，占位文本将显示在文本框中。
5. copy(): 复制文贴板。
7. paste(): 从剪贴板中粘贴内容到文本框。
8. clear(): 清除文本框中的内容。
9. setValidator(validator): 设置文本框的输入验证器，用于限制输入的格式。
10. setEchoMode(echoMode): 设置文本框的回显模式，控制输入内容的显示方式，如密码模式。
11. setAlignment(alignment): 设置文本框中文本的对齐方式。
12. setFont(font): 设置文本框的字体。
13. setCursorPosition(pos): 设置文本框中光标的位置。

setText(str)输入
insert(str)追加输入
text()输出
clear()清空
setPlaceholderText(str)提示内容输入
returnPressed.connect(fun)响应回车
textChanged.connect(fun)文本改变

●QPlainTextEdit多行文本
1. setPlainText(text): 设置纯文本框的内容为给定的文本。
2. toPlainText(): 返回纯文本框中的纯文本内容。
3. setReadOnly(bool): 设置纯文本框的只读属性。如果参数为True，纯文本框将只能读取，不能编辑。
4. setPlaceholderText(text): 设置纯文本框的占位文本。当纯文本框没有输入内容时，占位文本将显示在纯文本框中。
5. copy(): 复制纯文本框中选中的文本到剪贴板。
6. cut(): 剪切纯文本框中选中的文本到剪贴板。
7. paste(): 从剪贴板中粘贴内容到纯文本框。
8. clear(): 清除纯文本框中的内容。
9. insertPlainText(text): 在纯文本框的当前光标位置插入纯文本。
10. appendPlainText(text): 在纯文本框末尾添加纯文本。
11. setFont(font): 设置纯文本框的字体。
12. setCursorWidth(width): 设置光标的宽度。
13. setLineWrapMode(mode): 设置纯文本框的换行模式。

setText(str)输入
insert(str)追加输入
text()输出
clear()清空
setPlaceholderText(str)提示内容输入

●QTextEdit多行富文本
setText(text): 设置文本框的内容为给定的文本。
toPlainText(): 返回文本框中的纯文本内容。
setReadOnly(bool): 设置文本框的只读属性。如果参数为True，文本框将只能读取，不能编辑。
setPlaceholderText(text): 设置文本框的占位文本。当文本框没有输入内容时，占位文本将显示在文本框中。
copy(): 复制文本框中选中的文本到剪贴板。
cut(): 剪切文本框中选中的文本到剪贴板。
paste(): 从剪贴板中粘贴内容到文本框。
clear(): 清除文本框中的内容。
insertPlainText(text): 在文本框的当前光标位置插入纯文本。
append(text): 在文本框末尾添加纯文本。
setFont(font): 设置文本框的字体。
setAlignment(alignment): 设置文本框中文字的对齐方式。


●QTextBrowser不可编辑文本
append(str)追加输入
text()输出
clear()清空
setPlaceholderText(str)文本框提示内容输入

●QRadioButton单选按钮，右键-指定为同一个按钮组
buttongroup.buttonClicked.connect(handleButtonClicked)响应按钮单击
checkedButton().text()获取按钮文本

●QLabel标签
pixmap显示图片

●QComboBox组合选择框
editable可编辑内容

●QListWidget列表
●QTableWidget表格
●QCheckBox勾选按钮
●tab页控件

⚫利用PySide2\designer.exe进行页面布局
●下载pyside2包
pip install pyside2 -i http://pypi.doubanio.com/simple/ --trusted-host pypi.doubanio.com
●环境文件夹中打开PySide2中的designer.exe
E:\anaconda\envs\pyside2\Lib\site-packages\PySide2\designer.exe
●layout布局
https://www.byhy.net/tut/py/gui/qt_03/
先不使用任何Layout，把所有控件 按位置 摆放在界面上
然后先从 最内层开始 进行控件的 Layout 设定
逐步拓展到外层 进行控件的 Layout设定
最后调整 layout中控件的大小比例， 优先使用 Layout的 layoutStrentch 属性来控制